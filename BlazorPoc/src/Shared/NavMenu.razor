
@inject SharedResourceMgt _localizer
@inject NavigationManager navigationManager
@using System.Threading

<section class="list-group menu list-unstyled">
    <h3>BlazorPOC</h3>
    <ul class="list-group menu list-unstyled">
        <li class="nav-item px-3">
            <NavLink class="list-group-item" href="@LanguageCode()" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> @_localizer[nameof(SharedResource.HomeNav)]
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="list-group-item" href="@(LanguageCode()+"/counter")">
                <span class="oi oi-plus" aria-hidden="true"></span> @_localizer[nameof(SharedResource.CounterNav)]
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="list-group-item" href="@(LanguageCode()+"/fetchdata")">
                <span class="oi oi-list-rich" aria-hidden="true"></span> @_localizer[nameof(SharedResource.FetchDataNav)]
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="list-group-item" href="@(LanguageCode()+"/vesseldimension")">
                <span class="oi oi-list-rich" aria-hidden="true"></span> @_localizer[nameof(SharedResource.VesselDimensionNav)]
            </NavLink>
        </li>
        @*<li class="nav-item px-3">
            <NavLink class="list-group-item" href="@(LanguageCode()+"/vesseldimension#")" @onclick="SwitchLanguage"><span class="oi oi-list-rich" aria-hidden="true"></span>@_localizer[nameof(SharedResource.ChangeLanguageNav)]</NavLink>
        </li>*@
        <li class="nav-item px-3">
            <NavLink class="list-group-item" href="@(LanguageCode()+"/feedback")">
                <span class="oi oi-list-rich" aria-hidden="true"></span>@_localizer[nameof(SharedResource.FeedbackNav)]
            </NavLink>
        </li>
    </ul>
</section>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private string LanguageCode()
    {
        return Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName;
    }

    private void SwitchLanguage()
    {
        var path = navigationManager.ToBaseRelativePath(navigationManager.Uri);
        if (path.StartsWith("en", StringComparison.OrdinalIgnoreCase))
        {
            navigationManager.NavigateTo("/fr" + (path.Length > 1 ? path.Substring(2) : ""));
        }
        else
        {
            navigationManager.NavigateTo("/en" + (path.Length > 1 ? path.Substring(2) : ""));
        }

    }
}
